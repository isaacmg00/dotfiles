;;  ██████  ██▓▓█████▄ ▓█████  ▄▄▄▄    ▄▄▄       ██▀███  ;;
;;▒██    ▒ ▓██▒▒██▀ ██▌▓█   ▀ ▓█████▄ ▒████▄    ▓██ ▒ ██▒;;
;;░ ▓██▄   ▒██▒░██   █▌▒███   ▒██▒ ▄██▒██  ▀█▄  ▓██ ░▄█ ▒;;
;;  ▒   ██▒░██░░▓█▄   ▌▒▓█  ▄ ▒██░█▀  ░██▄▄▄▄██ ▒██▀▀█▄  ;;
;;▒██████▒▒░██░░▒████▓ ░▒████▒░▓█  ▀█▓ ▓█   ▓██▒░██▓ ▒██▒;;
;;▒ ▒▓▒ ▒ ░░▓   ▒▒▓  ▒ ░░ ▒░ ░░▒▓███▀▒ ▒▒   ▓▒█░░ ▒▓ ░▒▓░;;
;;░ ░▒  ░ ░ ▒ ░ ░ ▒  ▒  ░ ░  ░▒░▒   ░   ▒   ▒▒ ░  ░▒ ░ ▒░;;
;;░  ░  ░   ▒ ░ ░ ░  ░    ░    ░    ░   ░   ▒     ░░   ░ ;;
;;      ░   ░     ░       ░  ░ ░            ░  ░   ░     ;;
;;              ░                   ░                    ;;
;;;;;;;;;;;;;;;;;;;;;;;By; @rxyhn;;;;;;;;;;;;;;;;;;;;;;;;;;




;; =================================================================================
;;	 S I D E B A R	- 	V A R  
;; =================================================================================
(defpoll hr		:interval "3600s"  "date +\"%H\"")
(defpoll min	:interval "60s"  "date +\"%M\"")
(defpoll dy		:interval "36000s"  "date +\"%A\"")

(defpoll cpu 		:interval "1s"  "~/.config/eww/scripts/cpu")
(defpoll ram 		:interval "1s"  "~/.config/eww/scripts/ram")
(defpoll battery	:interval "5m"  "~/.config/eww/scripts/sbbat percent")
(defpoll volume :interval "3ms"  "~/.config/eww/scripts/getvol")
(defpoll bright :interval "1ms"  "~/.config/eww/scripts/getbri")

(defpoll title		:interval "5s"  "~/.config/eww/scripts/music title")
(defpoll artist		:interval "5s"  "~/.config/eww/scripts/music artist")
(defpoll album		:interval "5s"  "~/.config/eww/scripts/music album")
(defpoll playpause	:interval "5s"  "~/.config/eww/scripts/music statusicon")
(defpoll art		:interval "5s"  "~/.config/eww/scripts/music coverloc")

(defpoll date		:interval "6h"  "date +\"%d\"")
(defpoll month		:interval "6h"  "date +\"%b\"")

(defpoll weather-icon :interval "20m"  "cat /tmp/sidebar/weather/weather-icon")
(defpoll temperature :interval "20m"  "cat /tmp/sidebar/weather/weather-degree")
(defpoll weather-hex :interval "20m"  "cat /tmp/sidebar/weather/weather-hex")
(defpoll weather-quote :interval "20m"  "~/.config/eww/scripts/getwethquote")
(defpoll weather-quote2 :interval "20m"  "~/.config/eww/scripts/getwethquote2")
(defpoll weather-stat :interval "20m"  "cat /tmp/sidebar/weather/weather-stat")
(defpoll weather-stat-side :interval "20m"  "~/.config/eww/scripts/weather-trimmer")
    
;; =================================================================================
;;	 S I D E B A R	-	W I D G E T S
;; =================================================================================

(defwidget time_side [] 	
	(box	:orientation "v" :space-evenly "false" :spacing 15
	(box	:orientation "h" :space-evenly "false" :halign "center"
	(label	:class "hour-side"	 :text hr)
	(label	:class "dots-side"	 :text ":")
	(label	:class "minutes-side" :text min))
	(label	:class "day-side" 	 :text dy)))

(defwidget system_side [] 
	(box	:orientation "h"	:spacing 25	 :halign "center" :valign "center" 
	(box	:class "cpubar-side"		:orientation "v" :spacing 15	  :space-evenly "false" :tooltip "${cpu}%"
	(scale	:orientation "v"	:flipped "true" :min 0		  :max 100		:value cpu		:active "false")
	(label	:class "cpu-side"		:text ""))
	(box	:class "rambar-side"		:orientation "v" :spacing 15	  :space-evenly "false" :tooltip "${ram}%"
	(scale	:orientation "v"	:flipped "true"	:min 0		  :max 100		:value ram		:active "false")
	(label	:class "ram-side"		:text ""))
	(box	:class "brightnessbar-side" 	:orientation "v" :spacing 15	  :space-evenly "false" :tooltip "${bright}"
	(scale	:orientation "v" 	:flipped "true" :min 0  	  :max 101		:value bright	:onchange "brightnessctl s {}%")
	(label	:class "brightness-side" 	:text ""))
	(box	:class "volumebar-side" 	:orientation "v" :spacing 15	  :space-evenly "false" :tooltip "${volume}%"
	(scale	:orientation "v" 	:flipped "true"	:min 0 	  :max 101		:value volume		:onchange "amixer -D pulse sset Master {}%")
	(label	:class "volume-side" 	:text ""))
	(box	:class "batterybar-side"	:orientation "v" :spacing 15	  :space-evenly "false" :tooltip "${battery}%"
	(scale	:orientation "v"	:flipped "true"	:min 0 	  :max 100		:value battery :active "false")
	(label	:class "battery-side"	:text ""))))

(defwidget music_side [] 
	(box	:orientation "h"
	(box	:class "albumart-side" :vexpand "false" :hexpand "false" :style "background-image: url('${art}');")
	(box	:orientation "v" :valign "top" :spacing 5 :space-evenly "false"
	(label	:class "song-side"		:limit-width 17 		:text title )
	(label	:class "album-side"		:limit-width 15			:text album)
	(label	:class "artist-side"		:limit-width 15			:text artist)
	(box	:orientation "h"	
	(button	:class "prev-side" 		:onclick "~/.config/eww/scripts/music previous" "玲")
	(button	:class "play-side"		:onclick "~/.config/eww/scripts/music toggle" playpause)
	(button	:class "next-side" 		:onclick "~/.config/eww/scripts/music next" "怜")))))

(defwidget power_side [] 
	(box :orientation "v" :halign "center" :class "power" 
	(button :class "shutdown-side"	:onclick "systemctl poweroff" "")
	(button	:class "restart-side"	:onclick "systemctl reboot" "")
	(button	:class "logoff-side"	:onclick "bspc quit" "")
	(button	:class "lock-side"		:onclick "nordlockscreen" "")))

(defwidget date_side [] 
	(box	:orientation "v"	:valign "center" :halign "center" :spacing 15
	(label	:class "calicon-side"	:text "")
	(label	:class "dat-side"		:text date)
	(label	:class "mon-side"		:text month)))



 (defwidget weather_side [] 
      (box :orientation "h" :space-evenly "false" 
        (box :class "weather-icon-side" :style "color: ${weather-hex}" weather-icon)
        (box :class "weather-info-side" :orientation "v" :space-evenly "false" 
          (box :class "temperature-side" "${temperature}  ")
          (box :class "weather-stat-side" weather-stat-side))))
 
 (defwidget bg_side [] 
      (box :orientation "v" :space-evenly "false" 
        :class "bg-side"))
;; =================================================================================
;;	 S I D E B A R	-	W I N D O W S
;; =================================================================================

(defwindow time_side 
	:geometry (geometry :x 105 :y 183 :width 305 :height 95)
	(time_side))

(defwindow system_side 
	:geometry (geometry :x 10 :y 490 :width 300 :height 250)
	(system_side))

(defwindow music_side 
	:geometry (geometry :x 10 :y 283 :width 400 :height 202)
	(music_side))

(defwindow power_side
	:geometry (geometry :x 317 :y 490 :width 93 :height 250)
	(power_side))

(defwindow date_side
	:geometry (geometry :x 10 :y 78 :width 90 :height 200)
	(date_side))

(defwindow bg_side
	:geometry (geometry :x -10 :y 65 :width 430 :height 690)
	(bg_side))

    (defwindow weather_side 
    :geometry (geometry :x 105 :y 80 :width 305 :height 95)
	(weather_side))

